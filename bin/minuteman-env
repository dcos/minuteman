#!/bin/bash

function valid_ip()
{
    local  ip=$1
    local  stat=1

    if [[ $ip =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
        OIFS=$IFS
        IFS='.'
        ip=($ip)
        IFS=$OIFS
        [[ ${ip[0]} -le 255 && ${ip[1]} -le 255 \
            && ${ip[2]} -le 255 && ${ip[3]} -le 255 ]]
        stat=$?
    fi
    return $stat
}

## Try to ascertain the node IP based on some set of heuristics
IP=127.0.0.1
if [ -x /opt/mesosphere/bin/detect_ip ]; then
    IP=$(/opt/mesosphere/bin/detect_ip)
    if ! valid_ip $IP; then
        ## 192.88.99.0 was chosen because it's a anycast IP
        ## used for v6 tunnels
        IP=$(ip r g 192.88.99.0 | grep -Po 'src \K[\d.]+')
    fi
else
    IP=$(ip r g 192.88.99.0 | grep -Po 'src \K[\d.]+')
fi
NAME=minuteman@${IP}
RELNAME="`dirname \"$0\"`"/minuteman

## If ERLANG_DISTRIBUTION is unset, then set it to inet_tcp
ERLANG_DISTRIBUTION=${ERLANG_DISTRIBUTION:=inet_tcp}
export ERLANG_DISTRIBUTION
CLIENT_CACERTFILE=${CLIENT_CACERTFILE:=/run/dcos/pki/CA/certs/ca.crt}
export CLIENT_CACERTFILE
CLIENT_KEYFILE=${CLIENT_KEYFILE:=/run/dcos/pki/tls/private/minuteman.key}
export CLIENT_KEYFILE
CLIENT_CERTFILE=${CLIENT_CERTFILE:=/run/dcos/pki/tls/certs/minuteman.crt}
export CLIENT_CERTFILE
CLIENT_VERIFY=${CLIENT_VERIFY:=verify_peer}
export CLIENT_VERIFY
CLIENT_DEPTH=${CLIENT_DEPTH:=10}
export CLIENT_DEPTH
SERVER_CACERTFILE=${SERVER_CACERTFILE:=/run/dcos/pki/CA/certs/ca.crt}
export SERVER_CACERTFILE
SERVER_KEYFILE=${SERVER_KEYFILE:=/run/dcos/pki/tls/private/minuteman.key}
export SERVER_KEYFILE
SERVER_CERTFILE=${SERVER_CERTFILE:=/run/dcos/pki/tls/certs/minuteman.crt}
export SERVER_CERTFILE
SERVER_VERIFY=${SERVER_VERIFY:=verify_peer}
export SERVER_VERIFY
SERVER_FAIL_IF_NO_PEER_CERT=${SERVER_FAIL_IF_NO_PEER_CERT:=true}
export SERVER_FAIL_IF_NO_PEER_CERT
SERVER_DEPTH=${SERVER_DEPTH:=10}
export SERVER_DEPTH


## By default MESOS_STATE_SSL_ENABLED is false
MESOS_STATE_SSL_ENABLED=${MESOS_STATE_SSL_ENABLED:=false}
export MESOS_STATE_SSL_ENABLED

NAME=${NAME} RELX_REPLACE_OS_VARS=true ERL_EPMD_PORT=61420 ${RELNAME} $@
